import { ViewContainerRef } from '@angular/core';
import { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';
/**
 * `e-header-rows` directive represent a header rows of the Schedule.
 * It must be contained in a Schedule component(`ejs-schedule`).
 * ```html
 * <ejs-schedule>
 *   <e-header-rows>
 *    <e-header-row option='Week'></e-header-row>
 *    <e-header-row option='Date'></e-header-row>
 *   </e-header-rows>
 * </ejs-schedule>
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class HeaderRowDirective extends ComplexBase<HeaderRowDirective> {
    private viewContainerRef;
    directivePropList: any;
    /**
     * It defines the header row type, which accepts either of the following values.
     * * Year
     * * Month
     * * Week
     * * Date
     * * Hour
     * @default null
     */
    option: any;
    /**
     * Template option to customize the individual header rows. It accepts either the string or HTMLElement as template design
     *  content and parse it appropriately before displaying it onto the header cells. The field that
     *  can be accessed via this template is `date`.
     * @default null
     */
    template: any;
    constructor(viewContainerRef: ViewContainerRef);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<HeaderRowDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<HeaderRowDirective, "e-header-rows>e-header-row", never, { "option": "option"; "template": "template"; }, {}, ["template"]>;
}
/**
 * HeaderRow Array Directive
 * @private
 */
export declare class HeaderRowsDirective extends ArrayBase<HeaderRowsDirective> {
    constructor();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<HeaderRowsDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<HeaderRowsDirective, "ejs-schedule>e-header-rows", never, {}, {}, ["children"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVycm93cy5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiaGVhZGVycm93cy5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tcGxleEJhc2UsIEFycmF5QmFzZSB9IGZyb20gJ0BzeW5jZnVzaW9uL2VqMi1hbmd1bGFyLWJhc2UnO1xuLyoqXG4gKiBgZS1oZWFkZXItcm93c2AgZGlyZWN0aXZlIHJlcHJlc2VudCBhIGhlYWRlciByb3dzIG9mIHRoZSBTY2hlZHVsZS5cbiAqIEl0IG11c3QgYmUgY29udGFpbmVkIGluIGEgU2NoZWR1bGUgY29tcG9uZW50KGBlanMtc2NoZWR1bGVgKS5cbiAqIGBgYGh0bWxcbiAqIDxlanMtc2NoZWR1bGU+XG4gKiAgIDxlLWhlYWRlci1yb3dzPlxuICogICAgPGUtaGVhZGVyLXJvdyBvcHRpb249J1dlZWsnPjwvZS1oZWFkZXItcm93PlxuICogICAgPGUtaGVhZGVyLXJvdyBvcHRpb249J0RhdGUnPjwvZS1oZWFkZXItcm93PlxuICogICA8L2UtaGVhZGVyLXJvd3M+XG4gKiA8L2Vqcy1zY2hlZHVsZT5cbiAqIGBgYFxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBIZWFkZXJSb3dEaXJlY3RpdmUgZXh0ZW5kcyBDb21wbGV4QmFzZTxIZWFkZXJSb3dEaXJlY3RpdmU+IHtcbiAgICBwcml2YXRlIHZpZXdDb250YWluZXJSZWY7XG4gICAgZGlyZWN0aXZlUHJvcExpc3Q6IGFueTtcbiAgICAvKipcbiAgICAgKiBJdCBkZWZpbmVzIHRoZSBoZWFkZXIgcm93IHR5cGUsIHdoaWNoIGFjY2VwdHMgZWl0aGVyIG9mIHRoZSBmb2xsb3dpbmcgdmFsdWVzLlxuICAgICAqICogWWVhclxuICAgICAqICogTW9udGhcbiAgICAgKiAqIFdlZWtcbiAgICAgKiAqIERhdGVcbiAgICAgKiAqIEhvdXJcbiAgICAgKiBAZGVmYXVsdCBudWxsXG4gICAgICovXG4gICAgb3B0aW9uOiBhbnk7XG4gICAgLyoqXG4gICAgICogVGVtcGxhdGUgb3B0aW9uIHRvIGN1c3RvbWl6ZSB0aGUgaW5kaXZpZHVhbCBoZWFkZXIgcm93cy4gSXQgYWNjZXB0cyBlaXRoZXIgdGhlIHN0cmluZyBvciBIVE1MRWxlbWVudCBhcyB0ZW1wbGF0ZSBkZXNpZ25cbiAgICAgKiAgY29udGVudCBhbmQgcGFyc2UgaXQgYXBwcm9wcmlhdGVseSBiZWZvcmUgZGlzcGxheWluZyBpdCBvbnRvIHRoZSBoZWFkZXIgY2VsbHMuIFRoZSBmaWVsZCB0aGF0XG4gICAgICogIGNhbiBiZSBhY2Nlc3NlZCB2aWEgdGhpcyB0ZW1wbGF0ZSBpcyBgZGF0ZWAuXG4gICAgICogQGRlZmF1bHQgbnVsbFxuICAgICAqL1xuICAgIHRlbXBsYXRlOiBhbnk7XG4gICAgY29uc3RydWN0b3Iodmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZik7XG59XG4vKipcbiAqIEhlYWRlclJvdyBBcnJheSBEaXJlY3RpdmVcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEhlYWRlclJvd3NEaXJlY3RpdmUgZXh0ZW5kcyBBcnJheUJhc2U8SGVhZGVyUm93c0RpcmVjdGl2ZT4ge1xuICAgIGNvbnN0cnVjdG9yKCk7XG59XG4iXX0=